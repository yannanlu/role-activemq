<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>
    <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
          lazy-init="false" scope="singleton"
          init-method="start" destroy-method="stop">
    </bean>
    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="{{broker_host}}" dataDirectory="${activemq.data}">
        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic=">" >
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit="{{pending_limit}}"/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>
        <plugins>
            <jaasAuthenticationPlugin configuration="activemq"/>
        </plugins>
        <managementContext>
{% if jmx_status == 'enabled' %}
            <managementContext createConnector="true"/>
{% else %}
            <managementContext createConnector="false"/>
{% endif %}
        </managementContext>
        <persistenceAdapter>
            <kahaDB directory="${activemq.data}/kahadb"/>
        </persistenceAdapter>
          <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="70" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="{{store_usage}} gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="{{temp_usage}} gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
{% if remote_uri is defined and remote_host is defined %}
        <networkConnectors>
            <networkConnector name="T->{{remote_host}}" uri="{{remote_uri}}" duplex="false" decreaseNetworkConsumerPriority="true" networkTTL="2" userName="{{broker_user}}" password="{{broker_passwd}}" dynamicOnly="true">
                <excludedDestinations>
                    <queue physicalName="&gt;"/>
                </excludedDestinations>
            </networkConnector>
            <networkConnector name="Q->{{remote_host}}" uri="{{remote_uri}}" duplex="false" decreaseNetworkConsumerPriority="true" networkTTL="2" userName="{{broker_user}}" password="{{broker_passwd}}" dynamicOnly="true">
                <excludedDestinations>
                    <topic physicalName="&gt;"/>
                </excludedDestinations>
            </networkConnector>
        </networkConnectors>
{% endif %}
{% if ssl_status == 'enabled' %}
        <sslContext>
            <sslContext keyStore="file:${activemq.base}/conf/broker.ks" keyStorePassword="{{ks_passwd}}"/>
        </sslContext>
        <transportConnectors>
            <transportConnector name="ssl" uri="ssl://{{broker_ip}}:{{broker_port}}?transport.enabledProtocol=TSLv1.2&amp;needClientAuth=false"/>
        </transportConnectors>
{% else %}
        <transportConnectors>
            <transportConnector name="openwire" uri="tcp://{{broker_ip}}:{{broker_port}}?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        </transportConnectors>
{% endif %}
        <shutdownHooks>
            <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
        </shutdownHooks>
    </broker>
    <import resource="jetty.xml"/>
</beans>
