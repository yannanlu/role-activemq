---
- name: Include vars of ec2_launcher
  include_vars:
    file: ../../ec2_launcher/defaults/main.yml
    name: ec2

- name: Query sg info
  become: no
  local_action:
    module: ec2_group_facts
    profile: "{{profile}}"
    region: "{{region|default(ec2.region)}}"
    filters:
      vpc_id: "{{vpc_id|default(ec2.vpc_id)}}"
      group_name: "{{sg_name|default(ec2.sg_name)}}"
  register: ec2_sg_info

- name: Initialize empty lists
  set_fact:
    sg_list: []
    mq_list: []

- name: Merge mq_list
  set_fact:
    mq_list: "{{mq_list}} + ['{{item.from_port}}:{{item.cidr_ip}}']"
  with_items: "{{activemq_extra_sg_rules}}"
  when: activemq_extra_sg_rules|length > 0

- name: Merge sg_list
  set_fact:
    sg_list: "{{sg_list}} + ['{{item.0.from_port}}:{{item.1.cidr_ip}}']"
  with_subelements:
    - "{{ec2_sg_info.security_groups[0].ip_permissions}}"
    - ip_ranges
  when: ec2_sg_info.security_groups|length > 0

- name: Update security group
  become: no
  local_action:
    module: ec2_group
    name: "{{ec2_sg_info.security_groups[0].group_name}}"
    profile: "{{profile}}"
    description: "{{ec2_sg_info.security_groups[0].description}}"
    region: "{{region|default(ec2.region)}}"
    vpc_id: "{{ec2_sg_info.security_groups[0].vpc_id}}"
    rules: "{{ec2.sg_rules}} + {{activemq_extra_sg_rules|difference(ec2.sg_rules)}}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: mq_list|difference(sg_list)|length > 0 and ec2_sg_info.security_groups|length > 0
